variables:
  CONTAINER_TAG: ${CI_COMMIT_SHORT_SHA}

stages:
  - build
  - deploy

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      else
        tag=":$CI_COMMIT_REF_SLUG"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag"
      fi
    - docker build --pull -t "$CI_REGISTRY_IMAGE${tag}" .
    - docker push "$CI_REGISTRY_IMAGE${tag}"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

deploy:
  stage: deploy
  image:
    #name: bitnami/kubectl:latest
    name: dtzar/helm-kubectl
    entrypoint: [""]
  script:
    - kubectl config get-contexts
    - kubectl config use-context boobsrate/k8sagent:hetzner
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        tag="$CI_COMMIT_REF_SLUG"
        ns="boobsrate"
        release="boobsrate-core"
        values="./deploy/boobsrate-core/values-prod.yaml"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag. Namespace = $ns. Release = $release"
      else
        tag="$CI_COMMIT_REF_SLUG"
        ns="boobsrate-dev"
        release="boobsrate-core-dev"
        values="./deploy/boobsrate-core/values-dev.yaml"
        echo "Running on branch '$CI_COMMIT_BRANCH': tag = $tag. Namespace = $ns. Release = $release"
      fi
    - helm upgrade --install ${release} ./deploy/boobsrate-core -f ${values} --set image.tag="${tag}" --namespace=${ns}